<?php
/**
 * AgreementsApi
 * PHP version 5
 *
 * @category Class
 * @package  Spinen\ConnectWise\Clients\Finance
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Finance API
 *
 * ConnectWise Finance API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: platform@connectwise.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Clients\Finance\Api;

use \Spinen\ConnectWise\Clients\Finance\ApiClient;
use \Spinen\ConnectWise\Clients\Finance\ApiException;
use \Spinen\ConnectWise\Clients\Finance\Configuration;
use \Spinen\ConnectWise\Clients\Finance\ObjectSerializer;

/**
 * AgreementsApi Class Doc Comment
 *
 * @category Class
 * @package  Spinen\ConnectWise\Clients\Finance
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AgreementsApi
{
    /**
     * API Client
     *
     * @var \Spinen\ConnectWise\Clients\Finance\ApiClient instance of the ApiClient
     */
    protected $apiClient;

    /**
     * Constructor
     *
     * @param  \Spinen\ConnectWise\Clients\Finance\ApiClient|null  $apiClient  The api client to use
     */
    public function __construct(\Spinen\ConnectWise\Clients\Finance\ApiClient $apiClient = null)
    {
        if ($apiClient === null) {
            $apiClient = new ApiClient();
        }

        $this->apiClient = $apiClient;
    }

    /**
     * Get API client
     *
     * @return \Spinen\ConnectWise\Clients\Finance\ApiClient get the API client
     */
    public function getApiClient()
    {
        return $this->apiClient;
    }

    /**
     * Set the API client
     *
     * @param  \Spinen\ConnectWise\Clients\Finance\ApiClient  $apiClient  set the API client
     *
     * @return AgreementsApi
     */
    public function setApiClient(\Spinen\ConnectWise\Clients\Finance\ApiClient $apiClient)
    {
        $this->apiClient = $apiClient;
        return $this;
    }

    /**
     * Operation financeAgreementsCountGet
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  string  $conditions  (optional)
     * @param  string  $custom_field_conditions  (optional)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\Count
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsCountGet($conditions = null, $custom_field_conditions = null)
    {
        list($response) = $this->financeAgreementsCountGetWithHttpInfo($conditions, $custom_field_conditions);
        return $response;
    }

    /**
     * Operation financeAgreementsCountGetWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  string  $conditions  (optional)
     * @param  string  $custom_field_conditions  (optional)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\Count, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsCountGetWithHttpInfo($conditions = null, $custom_field_conditions = null)
    {
        // parse inputs
        $resourcePath = "/finance/agreements/count";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // query params
        if ($conditions !== null) {
            $queryParams['conditions'] = $this->apiClient->getSerializer()->toQueryValue($conditions);
        }
        // query params
        if ($custom_field_conditions !== null) {
            $queryParams['customFieldConditions'] = $this->apiClient->getSerializer()->toQueryValue($custom_field_conditions);
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);


        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'GET',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\Count',
                '/finance/agreements/count'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\Count', $httpHeader), $statusCode, $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Count', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsGet
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  string  $conditions  (optional)
     * @param  string  $order_by  (optional)
     * @param  string  $childconditions  (optional)
     * @param  string  $customfieldconditions  (optional)
     * @param  int  $page  (optional)
     * @param  int  $page_size  (optional)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\Agreement[]
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsGet(
        $conditions = null,
        $order_by = null,
        $childconditions = null,
        $customfieldconditions = null,
        $page = null,
        $page_size = null
    ) {
        list($response) = $this->financeAgreementsGetWithHttpInfo($conditions, $order_by, $childconditions,
            $customfieldconditions, $page, $page_size);
        return $response;
    }

    /**
     * Operation financeAgreementsGetWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  string  $conditions  (optional)
     * @param  string  $order_by  (optional)
     * @param  string  $childconditions  (optional)
     * @param  string  $customfieldconditions  (optional)
     * @param  int  $page  (optional)
     * @param  int  $page_size  (optional)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\Agreement[], HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsGetWithHttpInfo(
        $conditions = null,
        $order_by = null,
        $childconditions = null,
        $customfieldconditions = null,
        $page = null,
        $page_size = null
    ) {
        // parse inputs
        $resourcePath = "/finance/agreements";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // query params
        if ($conditions !== null) {
            $queryParams['conditions'] = $this->apiClient->getSerializer()->toQueryValue($conditions);
        }
        // query params
        if ($order_by !== null) {
            $queryParams['orderBy'] = $this->apiClient->getSerializer()->toQueryValue($order_by);
        }
        // query params
        if ($childconditions !== null) {
            $queryParams['childconditions'] = $this->apiClient->getSerializer()->toQueryValue($childconditions);
        }
        // query params
        if ($customfieldconditions !== null) {
            $queryParams['customfieldconditions'] = $this->apiClient->getSerializer()->toQueryValue($customfieldconditions);
        }
        // query params
        if ($page !== null) {
            $queryParams['page'] = $this->apiClient->getSerializer()->toQueryValue($page);
        }
        // query params
        if ($page_size !== null) {
            $queryParams['pageSize'] = $this->apiClient->getSerializer()->toQueryValue($page_size);
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);


        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'GET',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\Agreement[]',
                '/finance/agreements'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\Agreement[]', $httpHeader), $statusCode, $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Agreement[]', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsIdConfigurationsConfigurationIdDelete
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  int  $configuration_id  (required)
     * @return void
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsConfigurationIdDelete($id, $configuration_id)
    {
        list($response) = $this->financeAgreementsIdConfigurationsConfigurationIdDeleteWithHttpInfo($id,
            $configuration_id);
        return $response;
    }

    /**
     * Operation financeAgreementsIdConfigurationsConfigurationIdDeleteWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  int  $configuration_id  (required)
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsConfigurationIdDeleteWithHttpInfo($id, $configuration_id)
    {
        // verify the required parameter 'id' is set
        if ($id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $id when calling financeAgreementsIdConfigurationsConfigurationIdDelete');
        }
        // verify the required parameter 'configuration_id' is set
        if ($configuration_id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $configuration_id when calling financeAgreementsIdConfigurationsConfigurationIdDelete');
        }
        // parse inputs
        $resourcePath = "/finance/agreements/{id}/configurations/{configurationId}";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept([]);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // path params
        if ($id !== null) {
            $resourcePath = str_replace(
                "{"."id"."}",
                $this->apiClient->getSerializer()->toPathValue($id),
                $resourcePath
            );
        }
        // path params
        if ($configuration_id !== null) {
            $resourcePath = str_replace(
                "{"."configurationId"."}",
                $this->apiClient->getSerializer()->toPathValue($configuration_id),
                $resourcePath
            );
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);


        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'DELETE',
                $queryParams,
                $httpBody,
                $headerParams,
                null,
                '/finance/agreements/{id}/configurations/{configurationId}'
            );

            return [null, $statusCode, $httpHeader];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsIdConfigurationsConfigurationIdGet
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  int  $configuration_id  (required)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsConfigurationIdGet($id, $configuration_id)
    {
        list($response) = $this->financeAgreementsIdConfigurationsConfigurationIdGetWithHttpInfo($id,
            $configuration_id);
        return $response;
    }

    /**
     * Operation financeAgreementsIdConfigurationsConfigurationIdGetWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  int  $configuration_id  (required)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsConfigurationIdGetWithHttpInfo($id, $configuration_id)
    {
        // verify the required parameter 'id' is set
        if ($id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $id when calling financeAgreementsIdConfigurationsConfigurationIdGet');
        }
        // verify the required parameter 'configuration_id' is set
        if ($configuration_id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $configuration_id when calling financeAgreementsIdConfigurationsConfigurationIdGet');
        }
        // parse inputs
        $resourcePath = "/finance/agreements/{id}/configurations/{configurationId}";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // path params
        if ($id !== null) {
            $resourcePath = str_replace(
                "{"."id"."}",
                $this->apiClient->getSerializer()->toPathValue($id),
                $resourcePath
            );
        }
        // path params
        if ($configuration_id !== null) {
            $resourcePath = str_replace(
                "{"."configurationId"."}",
                $this->apiClient->getSerializer()->toPathValue($configuration_id),
                $resourcePath
            );
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);


        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'GET',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference',
                '/finance/agreements/{id}/configurations/{configurationId}'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference', $httpHeader), $statusCode,
                $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsIdConfigurationsCountGet
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\Count
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsCountGet($id)
    {
        list($response) = $this->financeAgreementsIdConfigurationsCountGetWithHttpInfo($id);
        return $response;
    }

    /**
     * Operation financeAgreementsIdConfigurationsCountGetWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\Count, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsCountGetWithHttpInfo($id)
    {
        // verify the required parameter 'id' is set
        if ($id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $id when calling financeAgreementsIdConfigurationsCountGet');
        }
        // parse inputs
        $resourcePath = "/finance/agreements/{id}/configurations/count";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // path params
        if ($id !== null) {
            $resourcePath = str_replace(
                "{"."id"."}",
                $this->apiClient->getSerializer()->toPathValue($id),
                $resourcePath
            );
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);


        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'GET',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\Count',
                '/finance/agreements/{id}/configurations/count'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\Count', $httpHeader), $statusCode, $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Count', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsIdConfigurationsGet
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  int  $page  (optional)
     * @param  int  $page_size  (optional)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference[]
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsGet($id, $page = null, $page_size = null)
    {
        list($response) = $this->financeAgreementsIdConfigurationsGetWithHttpInfo($id, $page, $page_size);
        return $response;
    }

    /**
     * Operation financeAgreementsIdConfigurationsGetWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  int  $page  (optional)
     * @param  int  $page_size  (optional)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference[], HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsGetWithHttpInfo($id, $page = null, $page_size = null)
    {
        // verify the required parameter 'id' is set
        if ($id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $id when calling financeAgreementsIdConfigurationsGet');
        }
        // parse inputs
        $resourcePath = "/finance/agreements/{id}/configurations";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // query params
        if ($page !== null) {
            $queryParams['page'] = $this->apiClient->getSerializer()->toQueryValue($page);
        }
        // query params
        if ($page_size !== null) {
            $queryParams['pageSize'] = $this->apiClient->getSerializer()->toQueryValue($page_size);
        }
        // path params
        if ($id !== null) {
            $resourcePath = str_replace(
                "{"."id"."}",
                $this->apiClient->getSerializer()->toPathValue($id),
                $resourcePath
            );
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);


        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'GET',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference[]',
                '/finance/agreements/{id}/configurations'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference[]', $httpHeader), $statusCode,
                $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference[]', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsIdConfigurationsPost
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference  $configuration  (required)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsPost($id, $configuration)
    {
        list($response) = $this->financeAgreementsIdConfigurationsPostWithHttpInfo($id, $configuration);
        return $response;
    }

    /**
     * Operation financeAgreementsIdConfigurationsPostWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference  $configuration  (required)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdConfigurationsPostWithHttpInfo($id, $configuration)
    {
        // verify the required parameter 'id' is set
        if ($id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $id when calling financeAgreementsIdConfigurationsPost');
        }
        // verify the required parameter 'configuration' is set
        if ($configuration === null) {
            throw new \InvalidArgumentException('Missing the required parameter $configuration when calling financeAgreementsIdConfigurationsPost');
        }
        // parse inputs
        $resourcePath = "/finance/agreements/{id}/configurations";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType(['application/json']);

        // path params
        if ($id !== null) {
            $resourcePath = str_replace(
                "{"."id"."}",
                $this->apiClient->getSerializer()->toPathValue($id),
                $resourcePath
            );
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        // body params
        $_tempBody = null;
        if (isset($configuration)) {
            $_tempBody = $configuration;
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'POST',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference',
                '/finance/agreements/{id}/configurations'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference', $httpHeader), $statusCode,
                $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 201:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\ConfigurationReference', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsIdDelete
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @return void
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdDelete($id)
    {
        list($response) = $this->financeAgreementsIdDeleteWithHttpInfo($id);
        return $response;
    }

    /**
     * Operation financeAgreementsIdDeleteWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdDeleteWithHttpInfo($id)
    {
        // verify the required parameter 'id' is set
        if ($id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $id when calling financeAgreementsIdDelete');
        }
        // parse inputs
        $resourcePath = "/finance/agreements/{id}";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept([]);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // path params
        if ($id !== null) {
            $resourcePath = str_replace(
                "{"."id"."}",
                $this->apiClient->getSerializer()->toPathValue($id),
                $resourcePath
            );
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);


        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'DELETE',
                $queryParams,
                $httpBody,
                $headerParams,
                null,
                '/finance/agreements/{id}'
            );

            return [null, $statusCode, $httpHeader];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsIdGet
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\Agreement
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdGet($id)
    {
        list($response) = $this->financeAgreementsIdGetWithHttpInfo($id);
        return $response;
    }

    /**
     * Operation financeAgreementsIdGetWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\Agreement, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdGetWithHttpInfo($id)
    {
        // verify the required parameter 'id' is set
        if ($id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $id when calling financeAgreementsIdGet');
        }
        // parse inputs
        $resourcePath = "/finance/agreements/{id}";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // path params
        if ($id !== null) {
            $resourcePath = str_replace(
                "{"."id"."}",
                $this->apiClient->getSerializer()->toPathValue($id),
                $resourcePath
            );
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);


        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'GET',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\Agreement',
                '/finance/agreements/{id}'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\Agreement', $httpHeader), $statusCode, $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Agreement', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsIdPatch
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\PatchOperation[]  $operations  (required)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\Agreement
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdPatch($id, $operations)
    {
        list($response) = $this->financeAgreementsIdPatchWithHttpInfo($id, $operations);
        return $response;
    }

    /**
     * Operation financeAgreementsIdPatchWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\PatchOperation[]  $operations  (required)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\Agreement, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdPatchWithHttpInfo($id, $operations)
    {
        // verify the required parameter 'id' is set
        if ($id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $id when calling financeAgreementsIdPatch');
        }
        // verify the required parameter 'operations' is set
        if ($operations === null) {
            throw new \InvalidArgumentException('Missing the required parameter $operations when calling financeAgreementsIdPatch');
        }
        // parse inputs
        $resourcePath = "/finance/agreements/{id}";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType(['application/json']);

        // path params
        if ($id !== null) {
            $resourcePath = str_replace(
                "{"."id"."}",
                $this->apiClient->getSerializer()->toPathValue($id),
                $resourcePath
            );
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        // body params
        $_tempBody = null;
        if (isset($operations)) {
            $_tempBody = $operations;
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'PATCH',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\Agreement',
                '/finance/agreements/{id}'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\Agreement', $httpHeader), $statusCode, $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Agreement', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsIdPut
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\Agreement  $agreement  (required)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\Agreement
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdPut($id, $agreement)
    {
        list($response) = $this->financeAgreementsIdPutWithHttpInfo($id, $agreement);
        return $response;
    }

    /**
     * Operation financeAgreementsIdPutWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  int  $id  (required)
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\Agreement  $agreement  (required)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\Agreement, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsIdPutWithHttpInfo($id, $agreement)
    {
        // verify the required parameter 'id' is set
        if ($id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $id when calling financeAgreementsIdPut');
        }
        // verify the required parameter 'agreement' is set
        if ($agreement === null) {
            throw new \InvalidArgumentException('Missing the required parameter $agreement when calling financeAgreementsIdPut');
        }
        // parse inputs
        $resourcePath = "/finance/agreements/{id}";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType(['application/json']);

        // path params
        if ($id !== null) {
            $resourcePath = str_replace(
                "{"."id"."}",
                $this->apiClient->getSerializer()->toPathValue($id),
                $resourcePath
            );
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        // body params
        $_tempBody = null;
        if (isset($agreement)) {
            $_tempBody = $agreement;
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'PUT',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\Agreement',
                '/finance/agreements/{id}'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\Agreement', $httpHeader), $statusCode, $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Agreement', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation financeAgreementsPost
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\Agreement  $agreement  (required)
     * @return \Spinen\ConnectWise\Clients\Finance\Model\Agreement
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsPost($agreement)
    {
        list($response) = $this->financeAgreementsPostWithHttpInfo($agreement);
        return $response;
    }

    /**
     * Operation financeAgreementsPostWithHttpInfo
     *
     *
     *
     * Spinen&#39;s PHP ConnectWise Client for Finance API generated by Swagger Code Generator.
     *
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\Agreement  $agreement  (required)
     * @return array of \Spinen\ConnectWise\Clients\Finance\Model\Agreement, HTTP status code, HTTP response headers (array of strings)
     * @throws \Spinen\ConnectWise\Clients\Finance\ApiException on non-2xx response
     */
    public function financeAgreementsPostWithHttpInfo($agreement)
    {
        // verify the required parameter 'agreement' is set
        if ($agreement === null) {
            throw new \InvalidArgumentException('Missing the required parameter $agreement when calling financeAgreementsPost');
        }
        // parse inputs
        $resourcePath = "/finance/agreements";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType(['application/json']);

        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        // body params
        $_tempBody = null;
        if (isset($agreement)) {
            $_tempBody = $agreement;
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (count($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires HTTP basic authentication
        if (strlen($this->apiClient->getConfig()->getUsername()) !== 0 or strlen($this->apiClient->getConfig()->getPassword()) !== 0) {
            $headerParams['Authorization'] = 'Basic '.base64_encode($this->apiClient->getConfig()->getUsername().":".$this->apiClient->getConfig()->getPassword());
            $headerParams['clientId'] = $this->apiClient->getConfig()->getUserId();
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'POST',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Spinen\ConnectWise\Clients\Finance\Model\Agreement',
                '/finance/agreements'
            );

            return [
                $this->apiClient->getSerializer()->deserialize($response,
                    '\Spinen\ConnectWise\Clients\Finance\Model\Agreement', $httpHeader), $statusCode, $httpHeader
            ];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 201:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Agreement', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(),
                        '\Spinen\ConnectWise\Clients\Finance\Model\Error', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }
}
