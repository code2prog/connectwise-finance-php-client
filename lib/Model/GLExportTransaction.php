<?php
/**
 * GLExportTransaction
 *
 * PHP version 5
 *
 * @category Class
 * @package  Spinen\ConnectWise\Clients\Finance
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Finance API
 *
 * ConnectWise Finance API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: platform@connectwise.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Clients\Finance\Model;

use \ArrayAccess;

/**
 * GLExportTransaction Class Doc Comment
 *
 * @category    Class
 */

/**
 * @package     Spinen\ConnectWise\Clients\Finance
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class GLExportTransaction implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
     * The original name of the model.
     * @var string
     */
    protected static $swaggerModelName = 'GLExportTransaction';

    /**
     * Array of property to type mappings. Used for (de)serialization
     * @var string[]
     */
    protected static $swaggerTypes = [
        'id'                          => 'int',
        'gl_class'                    => 'string',
        'gl_type_id'                  => 'string',
        'document_date'               => '\DateTime',
        'document_number'             => 'string',
        'document_type'               => 'string',
        'memo'                        => 'string',
        'description'                 => 'string',
        'attention'                   => 'string',
        'sales_territory'             => 'string',
        'company'                     => '\Spinen\ConnectWise\Clients\Finance\Model\CompanyReference',
        'company_type'                => '\Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference',
        'company_account_number'      => 'string',
        'site'                        => '\Spinen\ConnectWise\Clients\Finance\Model\SiteReference',
        'billing_terms'               => '\Spinen\ConnectWise\Clients\Finance\Model\BillingTermsReference',
        'billing_terms_xref'          => 'string',
        'due_days'                    => 'int',
        'due_date'                    => '\DateTime',
        'email_delivery_flag'         => 'bool',
        'print_delivery_flag'         => 'bool',
        'agreement_pre_payment_flag'  => 'bool',
        'account_number'              => 'string',
        'billing_type'                => 'string',
        'gl_entry_ids'                => 'string',
        'purchase_order'              => '\Spinen\ConnectWise\Clients\Finance\Model\PurchaseOrderReference',
        'project'                     => '\Spinen\ConnectWise\Clients\Finance\Model\ProjectReference',
        'currency'                    => '\Spinen\ConnectWise\Clients\Finance\Model\CurrencyReference',
        'total'                       => 'double',
        'sales_rep_id'                => 'string',
        'sales_rep_name'              => 'string',
        'taxable'                     => 'bool',
        'taxable_total'               => 'double',
        'tax_code'                    => '\Spinen\ConnectWise\Clients\Finance\Model\TaxCodeReference',
        'tax_group_rate'              => 'double',
        'piggy_back_flag'             => 'bool',
        'tax_account_number'          => 'string',
        'sales_tax'                   => 'double',
        'state_tax'                   => 'double',
        'county_tax'                  => 'double',
        'city_tax'                    => 'double',
        'taxable_amount1'             => 'double',
        'taxable_amount2'             => 'double',
        'taxable_amount3'             => 'double',
        'taxable_amount4'             => 'double',
        'taxable_amount5'             => 'double',
        'tax_agency_xref'             => 'string',
        'state_tax_xref'              => 'string',
        'county_tax_xref'             => 'string',
        'tax_id'                      => 'string',
        'tax_dp_applied_flag'         => 'bool',
        'use_avalara_flag'            => 'bool',
        'send_avalara_tax_flag'       => 'bool',
        'ship_to_company'             => '\Spinen\ConnectWise\Clients\Finance\Model\CompanyReference',
        'ship_company_account_number' => 'string',
        'ship_company_type'           => '\Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference',
        'ship_tax_id'                 => 'string',
        'ship_site'                   => '\Spinen\ConnectWise\Clients\Finance\Model\SiteReference',
        'ship_contact'                => '\Spinen\ConnectWise\Clients\Finance\Model\ContactReference',
        'detail'                      => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportTransactionDetail[]'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'id'                          => 'id',
        'gl_class'                    => 'glClass',
        'gl_type_id'                  => 'glTypeId',
        'document_date'               => 'documentDate',
        'document_number'             => 'documentNumber',
        'document_type'               => 'documentType',
        'memo'                        => 'memo',
        'description'                 => 'description',
        'attention'                   => 'attention',
        'sales_territory'             => 'salesTerritory',
        'company'                     => 'company',
        'company_type'                => 'companyType',
        'company_account_number'      => 'companyAccountNumber',
        'site'                        => 'site',
        'billing_terms'               => 'billingTerms',
        'billing_terms_xref'          => 'billingTermsXref',
        'due_days'                    => 'dueDays',
        'due_date'                    => 'dueDate',
        'email_delivery_flag'         => 'emailDeliveryFlag',
        'print_delivery_flag'         => 'printDeliveryFlag',
        'agreement_pre_payment_flag'  => 'agreementPrePaymentFlag',
        'account_number'              => 'accountNumber',
        'billing_type'                => 'billingType',
        'gl_entry_ids'                => 'glEntryIds',
        'purchase_order'              => 'purchaseOrder',
        'project'                     => 'project',
        'currency'                    => 'currency',
        'total'                       => 'total',
        'sales_rep_id'                => 'salesRepId',
        'sales_rep_name'              => 'salesRepName',
        'taxable'                     => 'taxable',
        'taxable_total'               => 'taxableTotal',
        'tax_code'                    => 'taxCode',
        'tax_group_rate'              => 'taxGroupRate',
        'piggy_back_flag'             => 'piggyBackFlag',
        'tax_account_number'          => 'taxAccountNumber',
        'sales_tax'                   => 'salesTax',
        'state_tax'                   => 'stateTax',
        'county_tax'                  => 'countyTax',
        'city_tax'                    => 'cityTax',
        'taxable_amount1'             => 'taxableAmount1',
        'taxable_amount2'             => 'taxableAmount2',
        'taxable_amount3'             => 'taxableAmount3',
        'taxable_amount4'             => 'taxableAmount4',
        'taxable_amount5'             => 'taxableAmount5',
        'tax_agency_xref'             => 'taxAgencyXref',
        'state_tax_xref'              => 'stateTaxXref',
        'county_tax_xref'             => 'countyTaxXref',
        'tax_id'                      => 'taxId',
        'tax_dp_applied_flag'         => 'taxDpAppliedFlag',
        'use_avalara_flag'            => 'useAvalaraFlag',
        'send_avalara_tax_flag'       => 'sendAvalaraTaxFlag',
        'ship_to_company'             => 'shipToCompany',
        'ship_company_account_number' => 'shipCompanyAccountNumber',
        'ship_company_type'           => 'shipCompanyType',
        'ship_tax_id'                 => 'shipTaxId',
        'ship_site'                   => 'shipSite',
        'ship_contact'                => 'shipContact',
        'detail'                      => 'detail'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'id'                          => 'setId',
        'gl_class'                    => 'setGlClass',
        'gl_type_id'                  => 'setGlTypeId',
        'document_date'               => 'setDocumentDate',
        'document_number'             => 'setDocumentNumber',
        'document_type'               => 'setDocumentType',
        'memo'                        => 'setMemo',
        'description'                 => 'setDescription',
        'attention'                   => 'setAttention',
        'sales_territory'             => 'setSalesTerritory',
        'company'                     => 'setCompany',
        'company_type'                => 'setCompanyType',
        'company_account_number'      => 'setCompanyAccountNumber',
        'site'                        => 'setSite',
        'billing_terms'               => 'setBillingTerms',
        'billing_terms_xref'          => 'setBillingTermsXref',
        'due_days'                    => 'setDueDays',
        'due_date'                    => 'setDueDate',
        'email_delivery_flag'         => 'setEmailDeliveryFlag',
        'print_delivery_flag'         => 'setPrintDeliveryFlag',
        'agreement_pre_payment_flag'  => 'setAgreementPrePaymentFlag',
        'account_number'              => 'setAccountNumber',
        'billing_type'                => 'setBillingType',
        'gl_entry_ids'                => 'setGlEntryIds',
        'purchase_order'              => 'setPurchaseOrder',
        'project'                     => 'setProject',
        'currency'                    => 'setCurrency',
        'total'                       => 'setTotal',
        'sales_rep_id'                => 'setSalesRepId',
        'sales_rep_name'              => 'setSalesRepName',
        'taxable'                     => 'setTaxable',
        'taxable_total'               => 'setTaxableTotal',
        'tax_code'                    => 'setTaxCode',
        'tax_group_rate'              => 'setTaxGroupRate',
        'piggy_back_flag'             => 'setPiggyBackFlag',
        'tax_account_number'          => 'setTaxAccountNumber',
        'sales_tax'                   => 'setSalesTax',
        'state_tax'                   => 'setStateTax',
        'county_tax'                  => 'setCountyTax',
        'city_tax'                    => 'setCityTax',
        'taxable_amount1'             => 'setTaxableAmount1',
        'taxable_amount2'             => 'setTaxableAmount2',
        'taxable_amount3'             => 'setTaxableAmount3',
        'taxable_amount4'             => 'setTaxableAmount4',
        'taxable_amount5'             => 'setTaxableAmount5',
        'tax_agency_xref'             => 'setTaxAgencyXref',
        'state_tax_xref'              => 'setStateTaxXref',
        'county_tax_xref'             => 'setCountyTaxXref',
        'tax_id'                      => 'setTaxId',
        'tax_dp_applied_flag'         => 'setTaxDpAppliedFlag',
        'use_avalara_flag'            => 'setUseAvalaraFlag',
        'send_avalara_tax_flag'       => 'setSendAvalaraTaxFlag',
        'ship_to_company'             => 'setShipToCompany',
        'ship_company_account_number' => 'setShipCompanyAccountNumber',
        'ship_company_type'           => 'setShipCompanyType',
        'ship_tax_id'                 => 'setShipTaxId',
        'ship_site'                   => 'setShipSite',
        'ship_contact'                => 'setShipContact',
        'detail'                      => 'setDetail'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'id'                          => 'getId',
        'gl_class'                    => 'getGlClass',
        'gl_type_id'                  => 'getGlTypeId',
        'document_date'               => 'getDocumentDate',
        'document_number'             => 'getDocumentNumber',
        'document_type'               => 'getDocumentType',
        'memo'                        => 'getMemo',
        'description'                 => 'getDescription',
        'attention'                   => 'getAttention',
        'sales_territory'             => 'getSalesTerritory',
        'company'                     => 'getCompany',
        'company_type'                => 'getCompanyType',
        'company_account_number'      => 'getCompanyAccountNumber',
        'site'                        => 'getSite',
        'billing_terms'               => 'getBillingTerms',
        'billing_terms_xref'          => 'getBillingTermsXref',
        'due_days'                    => 'getDueDays',
        'due_date'                    => 'getDueDate',
        'email_delivery_flag'         => 'getEmailDeliveryFlag',
        'print_delivery_flag'         => 'getPrintDeliveryFlag',
        'agreement_pre_payment_flag'  => 'getAgreementPrePaymentFlag',
        'account_number'              => 'getAccountNumber',
        'billing_type'                => 'getBillingType',
        'gl_entry_ids'                => 'getGlEntryIds',
        'purchase_order'              => 'getPurchaseOrder',
        'project'                     => 'getProject',
        'currency'                    => 'getCurrency',
        'total'                       => 'getTotal',
        'sales_rep_id'                => 'getSalesRepId',
        'sales_rep_name'              => 'getSalesRepName',
        'taxable'                     => 'getTaxable',
        'taxable_total'               => 'getTaxableTotal',
        'tax_code'                    => 'getTaxCode',
        'tax_group_rate'              => 'getTaxGroupRate',
        'piggy_back_flag'             => 'getPiggyBackFlag',
        'tax_account_number'          => 'getTaxAccountNumber',
        'sales_tax'                   => 'getSalesTax',
        'state_tax'                   => 'getStateTax',
        'county_tax'                  => 'getCountyTax',
        'city_tax'                    => 'getCityTax',
        'taxable_amount1'             => 'getTaxableAmount1',
        'taxable_amount2'             => 'getTaxableAmount2',
        'taxable_amount3'             => 'getTaxableAmount3',
        'taxable_amount4'             => 'getTaxableAmount4',
        'taxable_amount5'             => 'getTaxableAmount5',
        'tax_agency_xref'             => 'getTaxAgencyXref',
        'state_tax_xref'              => 'getStateTaxXref',
        'county_tax_xref'             => 'getCountyTaxXref',
        'tax_id'                      => 'getTaxId',
        'tax_dp_applied_flag'         => 'getTaxDpAppliedFlag',
        'use_avalara_flag'            => 'getUseAvalaraFlag',
        'send_avalara_tax_flag'       => 'getSendAvalaraTaxFlag',
        'ship_to_company'             => 'getShipToCompany',
        'ship_company_account_number' => 'getShipCompanyAccountNumber',
        'ship_company_type'           => 'getShipCompanyType',
        'ship_tax_id'                 => 'getShipTaxId',
        'ship_site'                   => 'getShipSite',
        'ship_contact'                => 'getShipContact',
        'detail'                      => 'getDetail'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }


    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param  mixed[]  $data  Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['gl_class'] = isset($data['gl_class']) ? $data['gl_class'] : null;
        $this->container['gl_type_id'] = isset($data['gl_type_id']) ? $data['gl_type_id'] : null;
        $this->container['document_date'] = isset($data['document_date']) ? $data['document_date'] : null;
        $this->container['document_number'] = isset($data['document_number']) ? $data['document_number'] : null;
        $this->container['document_type'] = isset($data['document_type']) ? $data['document_type'] : null;
        $this->container['memo'] = isset($data['memo']) ? $data['memo'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['attention'] = isset($data['attention']) ? $data['attention'] : null;
        $this->container['sales_territory'] = isset($data['sales_territory']) ? $data['sales_territory'] : null;
        $this->container['company'] = isset($data['company']) ? $data['company'] : null;
        $this->container['company_type'] = isset($data['company_type']) ? $data['company_type'] : null;
        $this->container['company_account_number'] = isset($data['company_account_number']) ? $data['company_account_number'] : null;
        $this->container['site'] = isset($data['site']) ? $data['site'] : null;
        $this->container['billing_terms'] = isset($data['billing_terms']) ? $data['billing_terms'] : null;
        $this->container['billing_terms_xref'] = isset($data['billing_terms_xref']) ? $data['billing_terms_xref'] : null;
        $this->container['due_days'] = isset($data['due_days']) ? $data['due_days'] : null;
        $this->container['due_date'] = isset($data['due_date']) ? $data['due_date'] : null;
        $this->container['email_delivery_flag'] = isset($data['email_delivery_flag']) ? $data['email_delivery_flag'] : null;
        $this->container['print_delivery_flag'] = isset($data['print_delivery_flag']) ? $data['print_delivery_flag'] : null;
        $this->container['agreement_pre_payment_flag'] = isset($data['agreement_pre_payment_flag']) ? $data['agreement_pre_payment_flag'] : null;
        $this->container['account_number'] = isset($data['account_number']) ? $data['account_number'] : null;
        $this->container['billing_type'] = isset($data['billing_type']) ? $data['billing_type'] : null;
        $this->container['gl_entry_ids'] = isset($data['gl_entry_ids']) ? $data['gl_entry_ids'] : null;
        $this->container['purchase_order'] = isset($data['purchase_order']) ? $data['purchase_order'] : null;
        $this->container['project'] = isset($data['project']) ? $data['project'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['sales_rep_id'] = isset($data['sales_rep_id']) ? $data['sales_rep_id'] : null;
        $this->container['sales_rep_name'] = isset($data['sales_rep_name']) ? $data['sales_rep_name'] : null;
        $this->container['taxable'] = isset($data['taxable']) ? $data['taxable'] : null;
        $this->container['taxable_total'] = isset($data['taxable_total']) ? $data['taxable_total'] : null;
        $this->container['tax_code'] = isset($data['tax_code']) ? $data['tax_code'] : null;
        $this->container['tax_group_rate'] = isset($data['tax_group_rate']) ? $data['tax_group_rate'] : null;
        $this->container['piggy_back_flag'] = isset($data['piggy_back_flag']) ? $data['piggy_back_flag'] : null;
        $this->container['tax_account_number'] = isset($data['tax_account_number']) ? $data['tax_account_number'] : null;
        $this->container['sales_tax'] = isset($data['sales_tax']) ? $data['sales_tax'] : null;
        $this->container['state_tax'] = isset($data['state_tax']) ? $data['state_tax'] : null;
        $this->container['county_tax'] = isset($data['county_tax']) ? $data['county_tax'] : null;
        $this->container['city_tax'] = isset($data['city_tax']) ? $data['city_tax'] : null;
        $this->container['taxable_amount1'] = isset($data['taxable_amount1']) ? $data['taxable_amount1'] : null;
        $this->container['taxable_amount2'] = isset($data['taxable_amount2']) ? $data['taxable_amount2'] : null;
        $this->container['taxable_amount3'] = isset($data['taxable_amount3']) ? $data['taxable_amount3'] : null;
        $this->container['taxable_amount4'] = isset($data['taxable_amount4']) ? $data['taxable_amount4'] : null;
        $this->container['taxable_amount5'] = isset($data['taxable_amount5']) ? $data['taxable_amount5'] : null;
        $this->container['tax_agency_xref'] = isset($data['tax_agency_xref']) ? $data['tax_agency_xref'] : null;
        $this->container['state_tax_xref'] = isset($data['state_tax_xref']) ? $data['state_tax_xref'] : null;
        $this->container['county_tax_xref'] = isset($data['county_tax_xref']) ? $data['county_tax_xref'] : null;
        $this->container['tax_id'] = isset($data['tax_id']) ? $data['tax_id'] : null;
        $this->container['tax_dp_applied_flag'] = isset($data['tax_dp_applied_flag']) ? $data['tax_dp_applied_flag'] : null;
        $this->container['use_avalara_flag'] = isset($data['use_avalara_flag']) ? $data['use_avalara_flag'] : null;
        $this->container['send_avalara_tax_flag'] = isset($data['send_avalara_tax_flag']) ? $data['send_avalara_tax_flag'] : null;
        $this->container['ship_to_company'] = isset($data['ship_to_company']) ? $data['ship_to_company'] : null;
        $this->container['ship_company_account_number'] = isset($data['ship_company_account_number']) ? $data['ship_company_account_number'] : null;
        $this->container['ship_company_type'] = isset($data['ship_company_type']) ? $data['ship_company_type'] : null;
        $this->container['ship_tax_id'] = isset($data['ship_tax_id']) ? $data['ship_tax_id'] : null;
        $this->container['ship_site'] = isset($data['ship_site']) ? $data['ship_site'] : null;
        $this->container['ship_contact'] = isset($data['ship_contact']) ? $data['ship_contact'] : null;
        $this->container['detail'] = isset($data['detail']) ? $data['detail'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param  int  $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets gl_class
     * @return string
     */
    public function getGlClass()
    {
        return $this->container['gl_class'];
    }

    /**
     * Sets gl_class
     * @param  string  $gl_class
     * @return $this
     */
    public function setGlClass($gl_class)
    {
        $this->container['gl_class'] = $gl_class;

        return $this;
    }

    /**
     * Gets gl_type_id
     * @return string
     */
    public function getGlTypeId()
    {
        return $this->container['gl_type_id'];
    }

    /**
     * Sets gl_type_id
     * @param  string  $gl_type_id
     * @return $this
     */
    public function setGlTypeId($gl_type_id)
    {
        $this->container['gl_type_id'] = $gl_type_id;

        return $this;
    }

    /**
     * Gets document_date
     * @return \DateTime
     */
    public function getDocumentDate()
    {
        return $this->container['document_date'];
    }

    /**
     * Sets document_date
     * @param  \DateTime  $document_date
     * @return $this
     */
    public function setDocumentDate($document_date)
    {
        $this->container['document_date'] = $document_date;

        return $this;
    }

    /**
     * Gets document_number
     * @return string
     */
    public function getDocumentNumber()
    {
        return $this->container['document_number'];
    }

    /**
     * Sets document_number
     * @param  string  $document_number
     * @return $this
     */
    public function setDocumentNumber($document_number)
    {
        $this->container['document_number'] = $document_number;

        return $this;
    }

    /**
     * Gets document_type
     * @return string
     */
    public function getDocumentType()
    {
        return $this->container['document_type'];
    }

    /**
     * Sets document_type
     * @param  string  $document_type
     * @return $this
     */
    public function setDocumentType($document_type)
    {
        $this->container['document_type'] = $document_type;

        return $this;
    }

    /**
     * Gets memo
     * @return string
     */
    public function getMemo()
    {
        return $this->container['memo'];
    }

    /**
     * Sets memo
     * @param  string  $memo
     * @return $this
     */
    public function setMemo($memo)
    {
        $this->container['memo'] = $memo;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param  string  $description
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets attention
     * @return string
     */
    public function getAttention()
    {
        return $this->container['attention'];
    }

    /**
     * Sets attention
     * @param  string  $attention
     * @return $this
     */
    public function setAttention($attention)
    {
        $this->container['attention'] = $attention;

        return $this;
    }

    /**
     * Gets sales_territory
     * @return string
     */
    public function getSalesTerritory()
    {
        return $this->container['sales_territory'];
    }

    /**
     * Sets sales_territory
     * @param  string  $sales_territory
     * @return $this
     */
    public function setSalesTerritory($sales_territory)
    {
        $this->container['sales_territory'] = $sales_territory;

        return $this;
    }

    /**
     * Gets company
     * @return \Spinen\ConnectWise\Clients\Finance\Model\CompanyReference
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\CompanyReference  $company
     * @return $this
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets company_type
     * @return \Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference
     */
    public function getCompanyType()
    {
        return $this->container['company_type'];
    }

    /**
     * Sets company_type
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference  $company_type
     * @return $this
     */
    public function setCompanyType($company_type)
    {
        $this->container['company_type'] = $company_type;

        return $this;
    }

    /**
     * Gets company_account_number
     * @return string
     */
    public function getCompanyAccountNumber()
    {
        return $this->container['company_account_number'];
    }

    /**
     * Sets company_account_number
     * @param  string  $company_account_number
     * @return $this
     */
    public function setCompanyAccountNumber($company_account_number)
    {
        $this->container['company_account_number'] = $company_account_number;

        return $this;
    }

    /**
     * Gets site
     * @return \Spinen\ConnectWise\Clients\Finance\Model\SiteReference
     */
    public function getSite()
    {
        return $this->container['site'];
    }

    /**
     * Sets site
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\SiteReference  $site
     * @return $this
     */
    public function setSite($site)
    {
        $this->container['site'] = $site;

        return $this;
    }

    /**
     * Gets billing_terms
     * @return \Spinen\ConnectWise\Clients\Finance\Model\BillingTermsReference
     */
    public function getBillingTerms()
    {
        return $this->container['billing_terms'];
    }

    /**
     * Sets billing_terms
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\BillingTermsReference  $billing_terms
     * @return $this
     */
    public function setBillingTerms($billing_terms)
    {
        $this->container['billing_terms'] = $billing_terms;

        return $this;
    }

    /**
     * Gets billing_terms_xref
     * @return string
     */
    public function getBillingTermsXref()
    {
        return $this->container['billing_terms_xref'];
    }

    /**
     * Sets billing_terms_xref
     * @param  string  $billing_terms_xref
     * @return $this
     */
    public function setBillingTermsXref($billing_terms_xref)
    {
        $this->container['billing_terms_xref'] = $billing_terms_xref;

        return $this;
    }

    /**
     * Gets due_days
     * @return int
     */
    public function getDueDays()
    {
        return $this->container['due_days'];
    }

    /**
     * Sets due_days
     * @param  int  $due_days
     * @return $this
     */
    public function setDueDays($due_days)
    {
        $this->container['due_days'] = $due_days;

        return $this;
    }

    /**
     * Gets due_date
     * @return \DateTime
     */
    public function getDueDate()
    {
        return $this->container['due_date'];
    }

    /**
     * Sets due_date
     * @param  \DateTime  $due_date
     * @return $this
     */
    public function setDueDate($due_date)
    {
        $this->container['due_date'] = $due_date;

        return $this;
    }

    /**
     * Gets email_delivery_flag
     * @return bool
     */
    public function getEmailDeliveryFlag()
    {
        return $this->container['email_delivery_flag'];
    }

    /**
     * Sets email_delivery_flag
     * @param  bool  $email_delivery_flag
     * @return $this
     */
    public function setEmailDeliveryFlag($email_delivery_flag)
    {
        $this->container['email_delivery_flag'] = $email_delivery_flag;

        return $this;
    }

    /**
     * Gets print_delivery_flag
     * @return bool
     */
    public function getPrintDeliveryFlag()
    {
        return $this->container['print_delivery_flag'];
    }

    /**
     * Sets print_delivery_flag
     * @param  bool  $print_delivery_flag
     * @return $this
     */
    public function setPrintDeliveryFlag($print_delivery_flag)
    {
        $this->container['print_delivery_flag'] = $print_delivery_flag;

        return $this;
    }

    /**
     * Gets agreement_pre_payment_flag
     * @return bool
     */
    public function getAgreementPrePaymentFlag()
    {
        return $this->container['agreement_pre_payment_flag'];
    }

    /**
     * Sets agreement_pre_payment_flag
     * @param  bool  $agreement_pre_payment_flag
     * @return $this
     */
    public function setAgreementPrePaymentFlag($agreement_pre_payment_flag)
    {
        $this->container['agreement_pre_payment_flag'] = $agreement_pre_payment_flag;

        return $this;
    }

    /**
     * Gets account_number
     * @return string
     */
    public function getAccountNumber()
    {
        return $this->container['account_number'];
    }

    /**
     * Sets account_number
     * @param  string  $account_number
     * @return $this
     */
    public function setAccountNumber($account_number)
    {
        $this->container['account_number'] = $account_number;

        return $this;
    }

    /**
     * Gets billing_type
     * @return string
     */
    public function getBillingType()
    {
        return $this->container['billing_type'];
    }

    /**
     * Sets billing_type
     * @param  string  $billing_type
     * @return $this
     */
    public function setBillingType($billing_type)
    {
        $this->container['billing_type'] = $billing_type;

        return $this;
    }

    /**
     * Gets gl_entry_ids
     * @return string
     */
    public function getGlEntryIds()
    {
        return $this->container['gl_entry_ids'];
    }

    /**
     * Sets gl_entry_ids
     * @param  string  $gl_entry_ids
     * @return $this
     */
    public function setGlEntryIds($gl_entry_ids)
    {
        $this->container['gl_entry_ids'] = $gl_entry_ids;

        return $this;
    }

    /**
     * Gets purchase_order
     * @return \Spinen\ConnectWise\Clients\Finance\Model\PurchaseOrderReference
     */
    public function getPurchaseOrder()
    {
        return $this->container['purchase_order'];
    }

    /**
     * Sets purchase_order
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\PurchaseOrderReference  $purchase_order
     * @return $this
     */
    public function setPurchaseOrder($purchase_order)
    {
        $this->container['purchase_order'] = $purchase_order;

        return $this;
    }

    /**
     * Gets project
     * @return \Spinen\ConnectWise\Clients\Finance\Model\ProjectReference
     */
    public function getProject()
    {
        return $this->container['project'];
    }

    /**
     * Sets project
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\ProjectReference  $project
     * @return $this
     */
    public function setProject($project)
    {
        $this->container['project'] = $project;

        return $this;
    }

    /**
     * Gets currency
     * @return \Spinen\ConnectWise\Clients\Finance\Model\CurrencyReference
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\CurrencyReference  $currency
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets total
     * @return double
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     * @param  double  $total
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets sales_rep_id
     * @return string
     */
    public function getSalesRepId()
    {
        return $this->container['sales_rep_id'];
    }

    /**
     * Sets sales_rep_id
     * @param  string  $sales_rep_id
     * @return $this
     */
    public function setSalesRepId($sales_rep_id)
    {
        $this->container['sales_rep_id'] = $sales_rep_id;

        return $this;
    }

    /**
     * Gets sales_rep_name
     * @return string
     */
    public function getSalesRepName()
    {
        return $this->container['sales_rep_name'];
    }

    /**
     * Sets sales_rep_name
     * @param  string  $sales_rep_name
     * @return $this
     */
    public function setSalesRepName($sales_rep_name)
    {
        $this->container['sales_rep_name'] = $sales_rep_name;

        return $this;
    }

    /**
     * Gets taxable
     * @return bool
     */
    public function getTaxable()
    {
        return $this->container['taxable'];
    }

    /**
     * Sets taxable
     * @param  bool  $taxable
     * @return $this
     */
    public function setTaxable($taxable)
    {
        $this->container['taxable'] = $taxable;

        return $this;
    }

    /**
     * Gets taxable_total
     * @return double
     */
    public function getTaxableTotal()
    {
        return $this->container['taxable_total'];
    }

    /**
     * Sets taxable_total
     * @param  double  $taxable_total
     * @return $this
     */
    public function setTaxableTotal($taxable_total)
    {
        $this->container['taxable_total'] = $taxable_total;

        return $this;
    }

    /**
     * Gets tax_code
     * @return \Spinen\ConnectWise\Clients\Finance\Model\TaxCodeReference
     */
    public function getTaxCode()
    {
        return $this->container['tax_code'];
    }

    /**
     * Sets tax_code
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\TaxCodeReference  $tax_code
     * @return $this
     */
    public function setTaxCode($tax_code)
    {
        $this->container['tax_code'] = $tax_code;

        return $this;
    }

    /**
     * Gets tax_group_rate
     * @return double
     */
    public function getTaxGroupRate()
    {
        return $this->container['tax_group_rate'];
    }

    /**
     * Sets tax_group_rate
     * @param  double  $tax_group_rate
     * @return $this
     */
    public function setTaxGroupRate($tax_group_rate)
    {
        $this->container['tax_group_rate'] = $tax_group_rate;

        return $this;
    }

    /**
     * Gets piggy_back_flag
     * @return bool
     */
    public function getPiggyBackFlag()
    {
        return $this->container['piggy_back_flag'];
    }

    /**
     * Sets piggy_back_flag
     * @param  bool  $piggy_back_flag
     * @return $this
     */
    public function setPiggyBackFlag($piggy_back_flag)
    {
        $this->container['piggy_back_flag'] = $piggy_back_flag;

        return $this;
    }

    /**
     * Gets tax_account_number
     * @return string
     */
    public function getTaxAccountNumber()
    {
        return $this->container['tax_account_number'];
    }

    /**
     * Sets tax_account_number
     * @param  string  $tax_account_number
     * @return $this
     */
    public function setTaxAccountNumber($tax_account_number)
    {
        $this->container['tax_account_number'] = $tax_account_number;

        return $this;
    }

    /**
     * Gets sales_tax
     * @return double
     */
    public function getSalesTax()
    {
        return $this->container['sales_tax'];
    }

    /**
     * Sets sales_tax
     * @param  double  $sales_tax
     * @return $this
     */
    public function setSalesTax($sales_tax)
    {
        $this->container['sales_tax'] = $sales_tax;

        return $this;
    }

    /**
     * Gets state_tax
     * @return double
     */
    public function getStateTax()
    {
        return $this->container['state_tax'];
    }

    /**
     * Sets state_tax
     * @param  double  $state_tax
     * @return $this
     */
    public function setStateTax($state_tax)
    {
        $this->container['state_tax'] = $state_tax;

        return $this;
    }

    /**
     * Gets county_tax
     * @return double
     */
    public function getCountyTax()
    {
        return $this->container['county_tax'];
    }

    /**
     * Sets county_tax
     * @param  double  $county_tax
     * @return $this
     */
    public function setCountyTax($county_tax)
    {
        $this->container['county_tax'] = $county_tax;

        return $this;
    }

    /**
     * Gets city_tax
     * @return double
     */
    public function getCityTax()
    {
        return $this->container['city_tax'];
    }

    /**
     * Sets city_tax
     * @param  double  $city_tax
     * @return $this
     */
    public function setCityTax($city_tax)
    {
        $this->container['city_tax'] = $city_tax;

        return $this;
    }

    /**
     * Gets taxable_amount1
     * @return double
     */
    public function getTaxableAmount1()
    {
        return $this->container['taxable_amount1'];
    }

    /**
     * Sets taxable_amount1
     * @param  double  $taxable_amount1
     * @return $this
     */
    public function setTaxableAmount1($taxable_amount1)
    {
        $this->container['taxable_amount1'] = $taxable_amount1;

        return $this;
    }

    /**
     * Gets taxable_amount2
     * @return double
     */
    public function getTaxableAmount2()
    {
        return $this->container['taxable_amount2'];
    }

    /**
     * Sets taxable_amount2
     * @param  double  $taxable_amount2
     * @return $this
     */
    public function setTaxableAmount2($taxable_amount2)
    {
        $this->container['taxable_amount2'] = $taxable_amount2;

        return $this;
    }

    /**
     * Gets taxable_amount3
     * @return double
     */
    public function getTaxableAmount3()
    {
        return $this->container['taxable_amount3'];
    }

    /**
     * Sets taxable_amount3
     * @param  double  $taxable_amount3
     * @return $this
     */
    public function setTaxableAmount3($taxable_amount3)
    {
        $this->container['taxable_amount3'] = $taxable_amount3;

        return $this;
    }

    /**
     * Gets taxable_amount4
     * @return double
     */
    public function getTaxableAmount4()
    {
        return $this->container['taxable_amount4'];
    }

    /**
     * Sets taxable_amount4
     * @param  double  $taxable_amount4
     * @return $this
     */
    public function setTaxableAmount4($taxable_amount4)
    {
        $this->container['taxable_amount4'] = $taxable_amount4;

        return $this;
    }

    /**
     * Gets taxable_amount5
     * @return double
     */
    public function getTaxableAmount5()
    {
        return $this->container['taxable_amount5'];
    }

    /**
     * Sets taxable_amount5
     * @param  double  $taxable_amount5
     * @return $this
     */
    public function setTaxableAmount5($taxable_amount5)
    {
        $this->container['taxable_amount5'] = $taxable_amount5;

        return $this;
    }

    /**
     * Gets tax_agency_xref
     * @return string
     */
    public function getTaxAgencyXref()
    {
        return $this->container['tax_agency_xref'];
    }

    /**
     * Sets tax_agency_xref
     * @param  string  $tax_agency_xref
     * @return $this
     */
    public function setTaxAgencyXref($tax_agency_xref)
    {
        $this->container['tax_agency_xref'] = $tax_agency_xref;

        return $this;
    }

    /**
     * Gets state_tax_xref
     * @return string
     */
    public function getStateTaxXref()
    {
        return $this->container['state_tax_xref'];
    }

    /**
     * Sets state_tax_xref
     * @param  string  $state_tax_xref
     * @return $this
     */
    public function setStateTaxXref($state_tax_xref)
    {
        $this->container['state_tax_xref'] = $state_tax_xref;

        return $this;
    }

    /**
     * Gets county_tax_xref
     * @return string
     */
    public function getCountyTaxXref()
    {
        return $this->container['county_tax_xref'];
    }

    /**
     * Sets county_tax_xref
     * @param  string  $county_tax_xref
     * @return $this
     */
    public function setCountyTaxXref($county_tax_xref)
    {
        $this->container['county_tax_xref'] = $county_tax_xref;

        return $this;
    }

    /**
     * Gets tax_id
     * @return string
     */
    public function getTaxId()
    {
        return $this->container['tax_id'];
    }

    /**
     * Sets tax_id
     * @param  string  $tax_id
     * @return $this
     */
    public function setTaxId($tax_id)
    {
        $this->container['tax_id'] = $tax_id;

        return $this;
    }

    /**
     * Gets tax_dp_applied_flag
     * @return bool
     */
    public function getTaxDpAppliedFlag()
    {
        return $this->container['tax_dp_applied_flag'];
    }

    /**
     * Sets tax_dp_applied_flag
     * @param  bool  $tax_dp_applied_flag
     * @return $this
     */
    public function setTaxDpAppliedFlag($tax_dp_applied_flag)
    {
        $this->container['tax_dp_applied_flag'] = $tax_dp_applied_flag;

        return $this;
    }

    /**
     * Gets use_avalara_flag
     * @return bool
     */
    public function getUseAvalaraFlag()
    {
        return $this->container['use_avalara_flag'];
    }

    /**
     * Sets use_avalara_flag
     * @param  bool  $use_avalara_flag
     * @return $this
     */
    public function setUseAvalaraFlag($use_avalara_flag)
    {
        $this->container['use_avalara_flag'] = $use_avalara_flag;

        return $this;
    }

    /**
     * Gets send_avalara_tax_flag
     * @return bool
     */
    public function getSendAvalaraTaxFlag()
    {
        return $this->container['send_avalara_tax_flag'];
    }

    /**
     * Sets send_avalara_tax_flag
     * @param  bool  $send_avalara_tax_flag
     * @return $this
     */
    public function setSendAvalaraTaxFlag($send_avalara_tax_flag)
    {
        $this->container['send_avalara_tax_flag'] = $send_avalara_tax_flag;

        return $this;
    }

    /**
     * Gets ship_to_company
     * @return \Spinen\ConnectWise\Clients\Finance\Model\CompanyReference
     */
    public function getShipToCompany()
    {
        return $this->container['ship_to_company'];
    }

    /**
     * Sets ship_to_company
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\CompanyReference  $ship_to_company
     * @return $this
     */
    public function setShipToCompany($ship_to_company)
    {
        $this->container['ship_to_company'] = $ship_to_company;

        return $this;
    }

    /**
     * Gets ship_company_account_number
     * @return string
     */
    public function getShipCompanyAccountNumber()
    {
        return $this->container['ship_company_account_number'];
    }

    /**
     * Sets ship_company_account_number
     * @param  string  $ship_company_account_number
     * @return $this
     */
    public function setShipCompanyAccountNumber($ship_company_account_number)
    {
        $this->container['ship_company_account_number'] = $ship_company_account_number;

        return $this;
    }

    /**
     * Gets ship_company_type
     * @return \Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference
     */
    public function getShipCompanyType()
    {
        return $this->container['ship_company_type'];
    }

    /**
     * Sets ship_company_type
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference  $ship_company_type
     * @return $this
     */
    public function setShipCompanyType($ship_company_type)
    {
        $this->container['ship_company_type'] = $ship_company_type;

        return $this;
    }

    /**
     * Gets ship_tax_id
     * @return string
     */
    public function getShipTaxId()
    {
        return $this->container['ship_tax_id'];
    }

    /**
     * Sets ship_tax_id
     * @param  string  $ship_tax_id
     * @return $this
     */
    public function setShipTaxId($ship_tax_id)
    {
        $this->container['ship_tax_id'] = $ship_tax_id;

        return $this;
    }

    /**
     * Gets ship_site
     * @return \Spinen\ConnectWise\Clients\Finance\Model\SiteReference
     */
    public function getShipSite()
    {
        return $this->container['ship_site'];
    }

    /**
     * Sets ship_site
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\SiteReference  $ship_site
     * @return $this
     */
    public function setShipSite($ship_site)
    {
        $this->container['ship_site'] = $ship_site;

        return $this;
    }

    /**
     * Gets ship_contact
     * @return \Spinen\ConnectWise\Clients\Finance\Model\ContactReference
     */
    public function getShipContact()
    {
        return $this->container['ship_contact'];
    }

    /**
     * Sets ship_contact
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\ContactReference  $ship_contact
     * @return $this
     */
    public function setShipContact($ship_contact)
    {
        $this->container['ship_contact'] = $ship_contact;

        return $this;
    }

    /**
     * Gets detail
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportTransactionDetail[]
     */
    public function getDetail()
    {
        return $this->container['detail'];
    }

    /**
     * Sets detail
     * @param  \Spinen\ConnectWise\Clients\Finance\Model\GLExportTransactionDetail[]  $detail
     * @return $this
     */
    public function setDetail($detail)
    {
        $this->container['detail'] = $detail;

        return $this;
    }

    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer  $offset  Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer  $offset  Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer  $offset  Offset
     * @param  mixed  $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer  $offset  Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Spinen\ConnectWise\Clients\Finance\ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT);
        }

        return json_encode(\Spinen\ConnectWise\Clients\Finance\ObjectSerializer::sanitizeForSerialization($this));
    }
}


