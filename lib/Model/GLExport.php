<?php
/**
 * GLExport
 *
 * PHP version 5
 *
 * @category Class
 * @package  Spinen\ConnectWise\Clients\Finance
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Finance API
 *
 * ConnectWise Finance API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: platform@connectwise.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Clients\Finance\Model;

use \ArrayAccess;

/**
 * GLExport Class Doc Comment
 *
 * @category    Class */
/**
 * @package     Spinen\ConnectWise\Clients\Finance
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class GLExport implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'GLExport';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'export_settings' => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportSettings',
        'vendors' => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportVendor[]',
        'customers' => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportCustomer[]',
        'transactions' => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportTransaction[]',
        'expenses' => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportExpense[]',
        'expense_bills' => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportExpenseBill[]',
        'purchase_transactions' => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportPurchaseTransaction[]',
        'adjustment_transactions' => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportAdjustmentTransaction[]',
        'inventory_transfers' => '\Spinen\ConnectWise\Clients\Finance\Model\GLExportInventoryTransfer[]'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'export_settings' => 'exportSettings',
        'vendors' => 'vendors',
        'customers' => 'customers',
        'transactions' => 'transactions',
        'expenses' => 'expenses',
        'expense_bills' => 'expenseBills',
        'purchase_transactions' => 'purchaseTransactions',
        'adjustment_transactions' => 'adjustmentTransactions',
        'inventory_transfers' => 'inventoryTransfers'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'export_settings' => 'setExportSettings',
        'vendors' => 'setVendors',
        'customers' => 'setCustomers',
        'transactions' => 'setTransactions',
        'expenses' => 'setExpenses',
        'expense_bills' => 'setExpenseBills',
        'purchase_transactions' => 'setPurchaseTransactions',
        'adjustment_transactions' => 'setAdjustmentTransactions',
        'inventory_transfers' => 'setInventoryTransfers'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'export_settings' => 'getExportSettings',
        'vendors' => 'getVendors',
        'customers' => 'getCustomers',
        'transactions' => 'getTransactions',
        'expenses' => 'getExpenses',
        'expense_bills' => 'getExpenseBills',
        'purchase_transactions' => 'getPurchaseTransactions',
        'adjustment_transactions' => 'getAdjustmentTransactions',
        'inventory_transfers' => 'getInventoryTransfers'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['export_settings'] = isset($data['export_settings']) ? $data['export_settings'] : null;
        $this->container['vendors'] = isset($data['vendors']) ? $data['vendors'] : null;
        $this->container['customers'] = isset($data['customers']) ? $data['customers'] : null;
        $this->container['transactions'] = isset($data['transactions']) ? $data['transactions'] : null;
        $this->container['expenses'] = isset($data['expenses']) ? $data['expenses'] : null;
        $this->container['expense_bills'] = isset($data['expense_bills']) ? $data['expense_bills'] : null;
        $this->container['purchase_transactions'] = isset($data['purchase_transactions']) ? $data['purchase_transactions'] : null;
        $this->container['adjustment_transactions'] = isset($data['adjustment_transactions']) ? $data['adjustment_transactions'] : null;
        $this->container['inventory_transfers'] = isset($data['inventory_transfers']) ? $data['inventory_transfers'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets export_settings
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportSettings
     */
    public function getExportSettings()
    {
        return $this->container['export_settings'];
    }

    /**
     * Sets export_settings
     * @param \Spinen\ConnectWise\Clients\Finance\Model\GLExportSettings $export_settings Mapped to GlPreferences Class
     * @return $this
     */
    public function setExportSettings($export_settings)
    {
        $this->container['export_settings'] = $export_settings;

        return $this;
    }

    /**
     * Gets vendors
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportVendor[]
     */
    public function getVendors()
    {
        return $this->container['vendors'];
    }

    /**
     * Sets vendors
     * @param \Spinen\ConnectWise\Clients\Finance\Model\GLExportVendor[] $vendors
     * @return $this
     */
    public function setVendors($vendors)
    {
        $this->container['vendors'] = $vendors;

        return $this;
    }

    /**
     * Gets customers
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportCustomer[]
     */
    public function getCustomers()
    {
        return $this->container['customers'];
    }

    /**
     * Sets customers
     * @param \Spinen\ConnectWise\Clients\Finance\Model\GLExportCustomer[] $customers
     * @return $this
     */
    public function setCustomers($customers)
    {
        $this->container['customers'] = $customers;

        return $this;
    }

    /**
     * Gets transactions
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportTransaction[]
     */
    public function getTransactions()
    {
        return $this->container['transactions'];
    }

    /**
     * Sets transactions
     * @param \Spinen\ConnectWise\Clients\Finance\Model\GLExportTransaction[] $transactions
     * @return $this
     */
    public function setTransactions($transactions)
    {
        $this->container['transactions'] = $transactions;

        return $this;
    }

    /**
     * Gets expenses
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportExpense[]
     */
    public function getExpenses()
    {
        return $this->container['expenses'];
    }

    /**
     * Sets expenses
     * @param \Spinen\ConnectWise\Clients\Finance\Model\GLExportExpense[] $expenses
     * @return $this
     */
    public function setExpenses($expenses)
    {
        $this->container['expenses'] = $expenses;

        return $this;
    }

    /**
     * Gets expense_bills
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportExpenseBill[]
     */
    public function getExpenseBills()
    {
        return $this->container['expense_bills'];
    }

    /**
     * Sets expense_bills
     * @param \Spinen\ConnectWise\Clients\Finance\Model\GLExportExpenseBill[] $expense_bills
     * @return $this
     */
    public function setExpenseBills($expense_bills)
    {
        $this->container['expense_bills'] = $expense_bills;

        return $this;
    }

    /**
     * Gets purchase_transactions
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportPurchaseTransaction[]
     */
    public function getPurchaseTransactions()
    {
        return $this->container['purchase_transactions'];
    }

    /**
     * Sets purchase_transactions
     * @param \Spinen\ConnectWise\Clients\Finance\Model\GLExportPurchaseTransaction[] $purchase_transactions
     * @return $this
     */
    public function setPurchaseTransactions($purchase_transactions)
    {
        $this->container['purchase_transactions'] = $purchase_transactions;

        return $this;
    }

    /**
     * Gets adjustment_transactions
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportAdjustmentTransaction[]
     */
    public function getAdjustmentTransactions()
    {
        return $this->container['adjustment_transactions'];
    }

    /**
     * Sets adjustment_transactions
     * @param \Spinen\ConnectWise\Clients\Finance\Model\GLExportAdjustmentTransaction[] $adjustment_transactions
     * @return $this
     */
    public function setAdjustmentTransactions($adjustment_transactions)
    {
        $this->container['adjustment_transactions'] = $adjustment_transactions;

        return $this;
    }

    /**
     * Gets inventory_transfers
     * @return \Spinen\ConnectWise\Clients\Finance\Model\GLExportInventoryTransfer[]
     */
    public function getInventoryTransfers()
    {
        return $this->container['inventory_transfers'];
    }

    /**
     * Sets inventory_transfers
     * @param \Spinen\ConnectWise\Clients\Finance\Model\GLExportInventoryTransfer[] $inventory_transfers
     * @return $this
     */
    public function setInventoryTransfers($inventory_transfers)
    {
        $this->container['inventory_transfers'] = $inventory_transfers;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Spinen\ConnectWise\Clients\Finance\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Spinen\ConnectWise\Clients\Finance\ObjectSerializer::sanitizeForSerialization($this));
    }
}


