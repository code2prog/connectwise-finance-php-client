<?php
/**
 * GLExportPurchaseTransaction
 *
 * PHP version 5
 *
 * @category Class
 * @package  Spinen\ConnectWise\Clients\Finance
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Finance API
 *
 * ConnectWise Finance API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: platform@connectwise.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model;

use \ArrayAccess;

/**
 * GLExportPurchaseTransaction Class Doc Comment
 *
 * @category    Class */
/**
 * @package     Spinen\ConnectWise\Clients\Finance
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class GLExportPurchaseTransaction implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'GLExportPurchaseTransaction';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'document_date' => '\DateTime',
        'document_number' => 'string',
        'description' => 'string',
        'memo' => 'string',
        'ap_account_number' => 'string',
        'purchase_date' => '\DateTime',
        'company' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyReference',
        'company_type' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference',
        'contact' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\ContactReference',
        'site' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\SiteReference',
        'purchase_class' => 'string',
        'freight_amount' => 'double',
        'freight_packing_slip' => 'string',
        'packing_slip' => 'string',
        'dropship_flag' => 'bool',
        'currency' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CurrencyReference',
        'total' => 'double',
        'billing_terms' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\BillingTermsReference',
        'billing_terms_xref' => 'string',
        'due_days' => 'int',
        'vendor_number' => 'string',
        'vendor_account_number' => 'string',
        'vendor_invoice_date' => '\DateTime',
        'vendor_invoice_number' => 'string',
        'tax_agency_xref' => 'string',
        'state_tax_xref' => 'string',
        'county_tax_xref' => 'string',
        'city_tax_xref' => 'string',
        'ship_to_company' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyReference',
        'ship_to_company_account_number' => 'string',
        'ship_to_company_type' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference',
        'ship_to_contact' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\ContactReference',
        'ship_to_site' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\SiteReference',
        'ship_to_tax_group' => 'string',
        'tax_code' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\TaxCodeReference',
        'tax_group_rate' => 'double',
        'use_avalara_tax_flag' => 'bool',
        'purchase_header_tax_group' => 'string',
        'purchase_header_taxable_flag' => 'bool',
        'purchase_header_freight_taxable_flag' => 'bool',
        'purchase_detail' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\GLExportPurchaseTransactionDetail[]',
        'purchase_detail_tax' => '\Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\GLExportPurchaseTransactionDetailTax[]'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'document_date' => 'documentDate',
        'document_number' => 'documentNumber',
        'description' => 'description',
        'memo' => 'memo',
        'ap_account_number' => 'apAccountNumber',
        'purchase_date' => 'purchaseDate',
        'company' => 'company',
        'company_type' => 'companyType',
        'contact' => 'contact',
        'site' => 'site',
        'purchase_class' => 'purchaseClass',
        'freight_amount' => 'freightAmount',
        'freight_packing_slip' => 'freightPackingSlip',
        'packing_slip' => 'packingSlip',
        'dropship_flag' => 'dropshipFlag',
        'currency' => 'currency',
        'total' => 'total',
        'billing_terms' => 'billingTerms',
        'billing_terms_xref' => 'billingTermsXref',
        'due_days' => 'dueDays',
        'vendor_number' => 'vendorNumber',
        'vendor_account_number' => 'vendorAccountNumber',
        'vendor_invoice_date' => 'vendorInvoiceDate',
        'vendor_invoice_number' => 'vendorInvoiceNumber',
        'tax_agency_xref' => 'taxAgencyXref',
        'state_tax_xref' => 'stateTaxXref',
        'county_tax_xref' => 'countyTaxXref',
        'city_tax_xref' => 'cityTaxXref',
        'ship_to_company' => 'shipToCompany',
        'ship_to_company_account_number' => 'shipToCompanyAccountNumber',
        'ship_to_company_type' => 'shipToCompanyType',
        'ship_to_contact' => 'shipToContact',
        'ship_to_site' => 'shipToSite',
        'ship_to_tax_group' => 'shipToTaxGroup',
        'tax_code' => 'taxCode',
        'tax_group_rate' => 'taxGroupRate',
        'use_avalara_tax_flag' => 'useAvalaraTaxFlag',
        'purchase_header_tax_group' => 'purchaseHeaderTaxGroup',
        'purchase_header_taxable_flag' => 'purchaseHeaderTaxableFlag',
        'purchase_header_freight_taxable_flag' => 'purchaseHeaderFreightTaxableFlag',
        'purchase_detail' => 'purchaseDetail',
        'purchase_detail_tax' => 'purchaseDetailTax'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'document_date' => 'setDocumentDate',
        'document_number' => 'setDocumentNumber',
        'description' => 'setDescription',
        'memo' => 'setMemo',
        'ap_account_number' => 'setApAccountNumber',
        'purchase_date' => 'setPurchaseDate',
        'company' => 'setCompany',
        'company_type' => 'setCompanyType',
        'contact' => 'setContact',
        'site' => 'setSite',
        'purchase_class' => 'setPurchaseClass',
        'freight_amount' => 'setFreightAmount',
        'freight_packing_slip' => 'setFreightPackingSlip',
        'packing_slip' => 'setPackingSlip',
        'dropship_flag' => 'setDropshipFlag',
        'currency' => 'setCurrency',
        'total' => 'setTotal',
        'billing_terms' => 'setBillingTerms',
        'billing_terms_xref' => 'setBillingTermsXref',
        'due_days' => 'setDueDays',
        'vendor_number' => 'setVendorNumber',
        'vendor_account_number' => 'setVendorAccountNumber',
        'vendor_invoice_date' => 'setVendorInvoiceDate',
        'vendor_invoice_number' => 'setVendorInvoiceNumber',
        'tax_agency_xref' => 'setTaxAgencyXref',
        'state_tax_xref' => 'setStateTaxXref',
        'county_tax_xref' => 'setCountyTaxXref',
        'city_tax_xref' => 'setCityTaxXref',
        'ship_to_company' => 'setShipToCompany',
        'ship_to_company_account_number' => 'setShipToCompanyAccountNumber',
        'ship_to_company_type' => 'setShipToCompanyType',
        'ship_to_contact' => 'setShipToContact',
        'ship_to_site' => 'setShipToSite',
        'ship_to_tax_group' => 'setShipToTaxGroup',
        'tax_code' => 'setTaxCode',
        'tax_group_rate' => 'setTaxGroupRate',
        'use_avalara_tax_flag' => 'setUseAvalaraTaxFlag',
        'purchase_header_tax_group' => 'setPurchaseHeaderTaxGroup',
        'purchase_header_taxable_flag' => 'setPurchaseHeaderTaxableFlag',
        'purchase_header_freight_taxable_flag' => 'setPurchaseHeaderFreightTaxableFlag',
        'purchase_detail' => 'setPurchaseDetail',
        'purchase_detail_tax' => 'setPurchaseDetailTax'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'document_date' => 'getDocumentDate',
        'document_number' => 'getDocumentNumber',
        'description' => 'getDescription',
        'memo' => 'getMemo',
        'ap_account_number' => 'getApAccountNumber',
        'purchase_date' => 'getPurchaseDate',
        'company' => 'getCompany',
        'company_type' => 'getCompanyType',
        'contact' => 'getContact',
        'site' => 'getSite',
        'purchase_class' => 'getPurchaseClass',
        'freight_amount' => 'getFreightAmount',
        'freight_packing_slip' => 'getFreightPackingSlip',
        'packing_slip' => 'getPackingSlip',
        'dropship_flag' => 'getDropshipFlag',
        'currency' => 'getCurrency',
        'total' => 'getTotal',
        'billing_terms' => 'getBillingTerms',
        'billing_terms_xref' => 'getBillingTermsXref',
        'due_days' => 'getDueDays',
        'vendor_number' => 'getVendorNumber',
        'vendor_account_number' => 'getVendorAccountNumber',
        'vendor_invoice_date' => 'getVendorInvoiceDate',
        'vendor_invoice_number' => 'getVendorInvoiceNumber',
        'tax_agency_xref' => 'getTaxAgencyXref',
        'state_tax_xref' => 'getStateTaxXref',
        'county_tax_xref' => 'getCountyTaxXref',
        'city_tax_xref' => 'getCityTaxXref',
        'ship_to_company' => 'getShipToCompany',
        'ship_to_company_account_number' => 'getShipToCompanyAccountNumber',
        'ship_to_company_type' => 'getShipToCompanyType',
        'ship_to_contact' => 'getShipToContact',
        'ship_to_site' => 'getShipToSite',
        'ship_to_tax_group' => 'getShipToTaxGroup',
        'tax_code' => 'getTaxCode',
        'tax_group_rate' => 'getTaxGroupRate',
        'use_avalara_tax_flag' => 'getUseAvalaraTaxFlag',
        'purchase_header_tax_group' => 'getPurchaseHeaderTaxGroup',
        'purchase_header_taxable_flag' => 'getPurchaseHeaderTaxableFlag',
        'purchase_header_freight_taxable_flag' => 'getPurchaseHeaderFreightTaxableFlag',
        'purchase_detail' => 'getPurchaseDetail',
        'purchase_detail_tax' => 'getPurchaseDetailTax'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['document_date'] = isset($data['document_date']) ? $data['document_date'] : null;
        $this->container['document_number'] = isset($data['document_number']) ? $data['document_number'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['memo'] = isset($data['memo']) ? $data['memo'] : null;
        $this->container['ap_account_number'] = isset($data['ap_account_number']) ? $data['ap_account_number'] : null;
        $this->container['purchase_date'] = isset($data['purchase_date']) ? $data['purchase_date'] : null;
        $this->container['company'] = isset($data['company']) ? $data['company'] : null;
        $this->container['company_type'] = isset($data['company_type']) ? $data['company_type'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['site'] = isset($data['site']) ? $data['site'] : null;
        $this->container['purchase_class'] = isset($data['purchase_class']) ? $data['purchase_class'] : null;
        $this->container['freight_amount'] = isset($data['freight_amount']) ? $data['freight_amount'] : null;
        $this->container['freight_packing_slip'] = isset($data['freight_packing_slip']) ? $data['freight_packing_slip'] : null;
        $this->container['packing_slip'] = isset($data['packing_slip']) ? $data['packing_slip'] : null;
        $this->container['dropship_flag'] = isset($data['dropship_flag']) ? $data['dropship_flag'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['billing_terms'] = isset($data['billing_terms']) ? $data['billing_terms'] : null;
        $this->container['billing_terms_xref'] = isset($data['billing_terms_xref']) ? $data['billing_terms_xref'] : null;
        $this->container['due_days'] = isset($data['due_days']) ? $data['due_days'] : null;
        $this->container['vendor_number'] = isset($data['vendor_number']) ? $data['vendor_number'] : null;
        $this->container['vendor_account_number'] = isset($data['vendor_account_number']) ? $data['vendor_account_number'] : null;
        $this->container['vendor_invoice_date'] = isset($data['vendor_invoice_date']) ? $data['vendor_invoice_date'] : null;
        $this->container['vendor_invoice_number'] = isset($data['vendor_invoice_number']) ? $data['vendor_invoice_number'] : null;
        $this->container['tax_agency_xref'] = isset($data['tax_agency_xref']) ? $data['tax_agency_xref'] : null;
        $this->container['state_tax_xref'] = isset($data['state_tax_xref']) ? $data['state_tax_xref'] : null;
        $this->container['county_tax_xref'] = isset($data['county_tax_xref']) ? $data['county_tax_xref'] : null;
        $this->container['city_tax_xref'] = isset($data['city_tax_xref']) ? $data['city_tax_xref'] : null;
        $this->container['ship_to_company'] = isset($data['ship_to_company']) ? $data['ship_to_company'] : null;
        $this->container['ship_to_company_account_number'] = isset($data['ship_to_company_account_number']) ? $data['ship_to_company_account_number'] : null;
        $this->container['ship_to_company_type'] = isset($data['ship_to_company_type']) ? $data['ship_to_company_type'] : null;
        $this->container['ship_to_contact'] = isset($data['ship_to_contact']) ? $data['ship_to_contact'] : null;
        $this->container['ship_to_site'] = isset($data['ship_to_site']) ? $data['ship_to_site'] : null;
        $this->container['ship_to_tax_group'] = isset($data['ship_to_tax_group']) ? $data['ship_to_tax_group'] : null;
        $this->container['tax_code'] = isset($data['tax_code']) ? $data['tax_code'] : null;
        $this->container['tax_group_rate'] = isset($data['tax_group_rate']) ? $data['tax_group_rate'] : null;
        $this->container['use_avalara_tax_flag'] = isset($data['use_avalara_tax_flag']) ? $data['use_avalara_tax_flag'] : null;
        $this->container['purchase_header_tax_group'] = isset($data['purchase_header_tax_group']) ? $data['purchase_header_tax_group'] : null;
        $this->container['purchase_header_taxable_flag'] = isset($data['purchase_header_taxable_flag']) ? $data['purchase_header_taxable_flag'] : null;
        $this->container['purchase_header_freight_taxable_flag'] = isset($data['purchase_header_freight_taxable_flag']) ? $data['purchase_header_freight_taxable_flag'] : null;
        $this->container['purchase_detail'] = isset($data['purchase_detail']) ? $data['purchase_detail'] : null;
        $this->container['purchase_detail_tax'] = isset($data['purchase_detail_tax']) ? $data['purchase_detail_tax'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets id
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param string $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets document_date
     * @return \DateTime
     */
    public function getDocumentDate()
    {
        return $this->container['document_date'];
    }

    /**
     * Sets document_date
     * @param \DateTime $document_date
     * @return $this
     */
    public function setDocumentDate($document_date)
    {
        $this->container['document_date'] = $document_date;

        return $this;
    }

    /**
     * Gets document_number
     * @return string
     */
    public function getDocumentNumber()
    {
        return $this->container['document_number'];
    }

    /**
     * Sets document_number
     * @param string $document_number
     * @return $this
     */
    public function setDocumentNumber($document_number)
    {
        $this->container['document_number'] = $document_number;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets memo
     * @return string
     */
    public function getMemo()
    {
        return $this->container['memo'];
    }

    /**
     * Sets memo
     * @param string $memo
     * @return $this
     */
    public function setMemo($memo)
    {
        $this->container['memo'] = $memo;

        return $this;
    }

    /**
     * Gets ap_account_number
     * @return string
     */
    public function getApAccountNumber()
    {
        return $this->container['ap_account_number'];
    }

    /**
     * Sets ap_account_number
     * @param string $ap_account_number
     * @return $this
     */
    public function setApAccountNumber($ap_account_number)
    {
        $this->container['ap_account_number'] = $ap_account_number;

        return $this;
    }

    /**
     * Gets purchase_date
     * @return \DateTime
     */
    public function getPurchaseDate()
    {
        return $this->container['purchase_date'];
    }

    /**
     * Sets purchase_date
     * @param \DateTime $purchase_date
     * @return $this
     */
    public function setPurchaseDate($purchase_date)
    {
        $this->container['purchase_date'] = $purchase_date;

        return $this;
    }

    /**
     * Gets company
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyReference
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyReference $company
     * @return $this
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets company_type
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference
     */
    public function getCompanyType()
    {
        return $this->container['company_type'];
    }

    /**
     * Sets company_type
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference $company_type
     * @return $this
     */
    public function setCompanyType($company_type)
    {
        $this->container['company_type'] = $company_type;

        return $this;
    }

    /**
     * Gets contact
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\ContactReference
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\ContactReference $contact
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets site
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\SiteReference
     */
    public function getSite()
    {
        return $this->container['site'];
    }

    /**
     * Sets site
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\SiteReference $site
     * @return $this
     */
    public function setSite($site)
    {
        $this->container['site'] = $site;

        return $this;
    }

    /**
     * Gets purchase_class
     * @return string
     */
    public function getPurchaseClass()
    {
        return $this->container['purchase_class'];
    }

    /**
     * Sets purchase_class
     * @param string $purchase_class
     * @return $this
     */
    public function setPurchaseClass($purchase_class)
    {
        $this->container['purchase_class'] = $purchase_class;

        return $this;
    }

    /**
     * Gets freight_amount
     * @return double
     */
    public function getFreightAmount()
    {
        return $this->container['freight_amount'];
    }

    /**
     * Sets freight_amount
     * @param double $freight_amount
     * @return $this
     */
    public function setFreightAmount($freight_amount)
    {
        $this->container['freight_amount'] = $freight_amount;

        return $this;
    }

    /**
     * Gets freight_packing_slip
     * @return string
     */
    public function getFreightPackingSlip()
    {
        return $this->container['freight_packing_slip'];
    }

    /**
     * Sets freight_packing_slip
     * @param string $freight_packing_slip
     * @return $this
     */
    public function setFreightPackingSlip($freight_packing_slip)
    {
        $this->container['freight_packing_slip'] = $freight_packing_slip;

        return $this;
    }

    /**
     * Gets packing_slip
     * @return string
     */
    public function getPackingSlip()
    {
        return $this->container['packing_slip'];
    }

    /**
     * Sets packing_slip
     * @param string $packing_slip
     * @return $this
     */
    public function setPackingSlip($packing_slip)
    {
        $this->container['packing_slip'] = $packing_slip;

        return $this;
    }

    /**
     * Gets dropship_flag
     * @return bool
     */
    public function getDropshipFlag()
    {
        return $this->container['dropship_flag'];
    }

    /**
     * Sets dropship_flag
     * @param bool $dropship_flag
     * @return $this
     */
    public function setDropshipFlag($dropship_flag)
    {
        $this->container['dropship_flag'] = $dropship_flag;

        return $this;
    }

    /**
     * Gets currency
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CurrencyReference
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CurrencyReference $currency
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets total
     * @return double
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     * @param double $total
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets billing_terms
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\BillingTermsReference
     */
    public function getBillingTerms()
    {
        return $this->container['billing_terms'];
    }

    /**
     * Sets billing_terms
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\BillingTermsReference $billing_terms
     * @return $this
     */
    public function setBillingTerms($billing_terms)
    {
        $this->container['billing_terms'] = $billing_terms;

        return $this;
    }

    /**
     * Gets billing_terms_xref
     * @return string
     */
    public function getBillingTermsXref()
    {
        return $this->container['billing_terms_xref'];
    }

    /**
     * Sets billing_terms_xref
     * @param string $billing_terms_xref
     * @return $this
     */
    public function setBillingTermsXref($billing_terms_xref)
    {
        $this->container['billing_terms_xref'] = $billing_terms_xref;

        return $this;
    }

    /**
     * Gets due_days
     * @return int
     */
    public function getDueDays()
    {
        return $this->container['due_days'];
    }

    /**
     * Sets due_days
     * @param int $due_days
     * @return $this
     */
    public function setDueDays($due_days)
    {
        $this->container['due_days'] = $due_days;

        return $this;
    }

    /**
     * Gets vendor_number
     * @return string
     */
    public function getVendorNumber()
    {
        return $this->container['vendor_number'];
    }

    /**
     * Sets vendor_number
     * @param string $vendor_number
     * @return $this
     */
    public function setVendorNumber($vendor_number)
    {
        $this->container['vendor_number'] = $vendor_number;

        return $this;
    }

    /**
     * Gets vendor_account_number
     * @return string
     */
    public function getVendorAccountNumber()
    {
        return $this->container['vendor_account_number'];
    }

    /**
     * Sets vendor_account_number
     * @param string $vendor_account_number
     * @return $this
     */
    public function setVendorAccountNumber($vendor_account_number)
    {
        $this->container['vendor_account_number'] = $vendor_account_number;

        return $this;
    }

    /**
     * Gets vendor_invoice_date
     * @return \DateTime
     */
    public function getVendorInvoiceDate()
    {
        return $this->container['vendor_invoice_date'];
    }

    /**
     * Sets vendor_invoice_date
     * @param \DateTime $vendor_invoice_date
     * @return $this
     */
    public function setVendorInvoiceDate($vendor_invoice_date)
    {
        $this->container['vendor_invoice_date'] = $vendor_invoice_date;

        return $this;
    }

    /**
     * Gets vendor_invoice_number
     * @return string
     */
    public function getVendorInvoiceNumber()
    {
        return $this->container['vendor_invoice_number'];
    }

    /**
     * Sets vendor_invoice_number
     * @param string $vendor_invoice_number
     * @return $this
     */
    public function setVendorInvoiceNumber($vendor_invoice_number)
    {
        $this->container['vendor_invoice_number'] = $vendor_invoice_number;

        return $this;
    }

    /**
     * Gets tax_agency_xref
     * @return string
     */
    public function getTaxAgencyXref()
    {
        return $this->container['tax_agency_xref'];
    }

    /**
     * Sets tax_agency_xref
     * @param string $tax_agency_xref
     * @return $this
     */
    public function setTaxAgencyXref($tax_agency_xref)
    {
        $this->container['tax_agency_xref'] = $tax_agency_xref;

        return $this;
    }

    /**
     * Gets state_tax_xref
     * @return string
     */
    public function getStateTaxXref()
    {
        return $this->container['state_tax_xref'];
    }

    /**
     * Sets state_tax_xref
     * @param string $state_tax_xref
     * @return $this
     */
    public function setStateTaxXref($state_tax_xref)
    {
        $this->container['state_tax_xref'] = $state_tax_xref;

        return $this;
    }

    /**
     * Gets county_tax_xref
     * @return string
     */
    public function getCountyTaxXref()
    {
        return $this->container['county_tax_xref'];
    }

    /**
     * Sets county_tax_xref
     * @param string $county_tax_xref
     * @return $this
     */
    public function setCountyTaxXref($county_tax_xref)
    {
        $this->container['county_tax_xref'] = $county_tax_xref;

        return $this;
    }

    /**
     * Gets city_tax_xref
     * @return string
     */
    public function getCityTaxXref()
    {
        return $this->container['city_tax_xref'];
    }

    /**
     * Sets city_tax_xref
     * @param string $city_tax_xref
     * @return $this
     */
    public function setCityTaxXref($city_tax_xref)
    {
        $this->container['city_tax_xref'] = $city_tax_xref;

        return $this;
    }

    /**
     * Gets ship_to_company
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyReference
     */
    public function getShipToCompany()
    {
        return $this->container['ship_to_company'];
    }

    /**
     * Sets ship_to_company
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyReference $ship_to_company
     * @return $this
     */
    public function setShipToCompany($ship_to_company)
    {
        $this->container['ship_to_company'] = $ship_to_company;

        return $this;
    }

    /**
     * Gets ship_to_company_account_number
     * @return string
     */
    public function getShipToCompanyAccountNumber()
    {
        return $this->container['ship_to_company_account_number'];
    }

    /**
     * Sets ship_to_company_account_number
     * @param string $ship_to_company_account_number
     * @return $this
     */
    public function setShipToCompanyAccountNumber($ship_to_company_account_number)
    {
        $this->container['ship_to_company_account_number'] = $ship_to_company_account_number;

        return $this;
    }

    /**
     * Gets ship_to_company_type
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference
     */
    public function getShipToCompanyType()
    {
        return $this->container['ship_to_company_type'];
    }

    /**
     * Sets ship_to_company_type
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\CompanyTypeReference $ship_to_company_type
     * @return $this
     */
    public function setShipToCompanyType($ship_to_company_type)
    {
        $this->container['ship_to_company_type'] = $ship_to_company_type;

        return $this;
    }

    /**
     * Gets ship_to_contact
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\ContactReference
     */
    public function getShipToContact()
    {
        return $this->container['ship_to_contact'];
    }

    /**
     * Sets ship_to_contact
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\ContactReference $ship_to_contact
     * @return $this
     */
    public function setShipToContact($ship_to_contact)
    {
        $this->container['ship_to_contact'] = $ship_to_contact;

        return $this;
    }

    /**
     * Gets ship_to_site
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\SiteReference
     */
    public function getShipToSite()
    {
        return $this->container['ship_to_site'];
    }

    /**
     * Sets ship_to_site
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\SiteReference $ship_to_site
     * @return $this
     */
    public function setShipToSite($ship_to_site)
    {
        $this->container['ship_to_site'] = $ship_to_site;

        return $this;
    }

    /**
     * Gets ship_to_tax_group
     * @return string
     */
    public function getShipToTaxGroup()
    {
        return $this->container['ship_to_tax_group'];
    }

    /**
     * Sets ship_to_tax_group
     * @param string $ship_to_tax_group
     * @return $this
     */
    public function setShipToTaxGroup($ship_to_tax_group)
    {
        $this->container['ship_to_tax_group'] = $ship_to_tax_group;

        return $this;
    }

    /**
     * Gets tax_code
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\TaxCodeReference
     */
    public function getTaxCode()
    {
        return $this->container['tax_code'];
    }

    /**
     * Sets tax_code
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\TaxCodeReference $tax_code
     * @return $this
     */
    public function setTaxCode($tax_code)
    {
        $this->container['tax_code'] = $tax_code;

        return $this;
    }

    /**
     * Gets tax_group_rate
     * @return double
     */
    public function getTaxGroupRate()
    {
        return $this->container['tax_group_rate'];
    }

    /**
     * Sets tax_group_rate
     * @param double $tax_group_rate
     * @return $this
     */
    public function setTaxGroupRate($tax_group_rate)
    {
        $this->container['tax_group_rate'] = $tax_group_rate;

        return $this;
    }

    /**
     * Gets use_avalara_tax_flag
     * @return bool
     */
    public function getUseAvalaraTaxFlag()
    {
        return $this->container['use_avalara_tax_flag'];
    }

    /**
     * Sets use_avalara_tax_flag
     * @param bool $use_avalara_tax_flag
     * @return $this
     */
    public function setUseAvalaraTaxFlag($use_avalara_tax_flag)
    {
        $this->container['use_avalara_tax_flag'] = $use_avalara_tax_flag;

        return $this;
    }

    /**
     * Gets purchase_header_tax_group
     * @return string
     */
    public function getPurchaseHeaderTaxGroup()
    {
        return $this->container['purchase_header_tax_group'];
    }

    /**
     * Sets purchase_header_tax_group
     * @param string $purchase_header_tax_group
     * @return $this
     */
    public function setPurchaseHeaderTaxGroup($purchase_header_tax_group)
    {
        $this->container['purchase_header_tax_group'] = $purchase_header_tax_group;

        return $this;
    }

    /**
     * Gets purchase_header_taxable_flag
     * @return bool
     */
    public function getPurchaseHeaderTaxableFlag()
    {
        return $this->container['purchase_header_taxable_flag'];
    }

    /**
     * Sets purchase_header_taxable_flag
     * @param bool $purchase_header_taxable_flag
     * @return $this
     */
    public function setPurchaseHeaderTaxableFlag($purchase_header_taxable_flag)
    {
        $this->container['purchase_header_taxable_flag'] = $purchase_header_taxable_flag;

        return $this;
    }

    /**
     * Gets purchase_header_freight_taxable_flag
     * @return bool
     */
    public function getPurchaseHeaderFreightTaxableFlag()
    {
        return $this->container['purchase_header_freight_taxable_flag'];
    }

    /**
     * Sets purchase_header_freight_taxable_flag
     * @param bool $purchase_header_freight_taxable_flag
     * @return $this
     */
    public function setPurchaseHeaderFreightTaxableFlag($purchase_header_freight_taxable_flag)
    {
        $this->container['purchase_header_freight_taxable_flag'] = $purchase_header_freight_taxable_flag;

        return $this;
    }

    /**
     * Gets purchase_detail
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\GLExportPurchaseTransactionDetail[]
     */
    public function getPurchaseDetail()
    {
        return $this->container['purchase_detail'];
    }

    /**
     * Sets purchase_detail
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\GLExportPurchaseTransactionDetail[] $purchase_detail
     * @return $this
     */
    public function setPurchaseDetail($purchase_detail)
    {
        $this->container['purchase_detail'] = $purchase_detail;

        return $this;
    }

    /**
     * Gets purchase_detail_tax
     * @return \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\GLExportPurchaseTransactionDetailTax[]
     */
    public function getPurchaseDetailTax()
    {
        return $this->container['purchase_detail_tax'];
    }

    /**
     * Sets purchase_detail_tax
     * @param \Spinen\ConnectWise\Clients\Finance\Spinen\ConnectWise\Clients\Finance\Model\GLExportPurchaseTransactionDetailTax[] $purchase_detail_tax
     * @return $this
     */
    public function setPurchaseDetailTax($purchase_detail_tax)
    {
        $this->container['purchase_detail_tax'] = $purchase_detail_tax;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Spinen\ConnectWise\Clients\Finance\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Spinen\ConnectWise\Clients\Finance\ObjectSerializer::sanitizeForSerialization($this));
    }
}


